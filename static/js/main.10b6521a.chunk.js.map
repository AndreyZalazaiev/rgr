{"version":3,"sources":["services/fakeAuthService.js","components/general/authHooks.js","components/general/AuthProvider.jsx","components/UserWidget/UserWidget.jsx","components/NavBar/NavBar.jsx","components/general/PrivateRoute.jsx","api/authApi.js","services/validationService.js","pages/Login/Login.jsx","pages/Logout/Logout.jsx","pages/Register/Register.jsx","components/general/CardWrapper.jsx","api/userApi.js","components/MenuNavBar/MenuNavBar.jsx","pages/UserProfile/UserSummary.jsx","components/PassedTestList/PassedTestItem.jsx","components/PassedTestList/PassedTestsList.jsx","pages/UserProfile/UserProfile.jsx","api/testApi.js","components/TestDescription/TestDescription.jsx","components/TestError/TestError.jsx","components/TestQuestion/TestQuestion.jsx","components/TestResult/AnswerResult.jsx","components/TestResult/QuestionDescription.jsx","components/TestResult/TestResult.jsx","components/Timer/Timer.jsx","components/Test/Test.jsx","pages/TestViewer/TestViewer.jsx","pages/PassedTests/PassedTests.jsx","api/assignedTestsApi.js","pages/AssignedTests/AssignedTestItem.jsx","pages/AssignedTests/AssignedTests.jsx","api/categoriesApi.js","components/general/CardItem.jsx","pages/Category/Category.jsx","pages/Category/SelectedCategory.jsx","pages/AddTest/Answer.jsx","pages/AddTest/Question.jsx","pages/AddTest/AddTest.jsx","api/homeApi.js","pages/Home/Home.jsx","App.js","index.js"],"names":["storageKey","useAuthProivder","useState","user","setUser","login","localStorage","setItem","JSON","stringify","auth","storageUser","getItem","parse","logout","removeItem","useAuth","useContext","authContext","createContext","AuthProvider","children","Provider","value","UserWidget","Nav","NavDropdown","title","username","className","to","Divider","NavBar","bg","variant","expand","Container","Toggle","aria-controls","Collapse","id","exact","activeClassName","role","PrivateRoute","rest","render","location","users","password","email","validationService","error","length","search","test","Login","history","useHistory","errorMessage","setError","Card","Body","Title","initialValues","onSubmit","values","credentials","find","u","push","touched","errors","FormGroup","FormLabel","htmlFor","name","placeholder","validate","validateRequired","type","validateRequiredd","Button","disabled","Logout","useEffect","Register","confrirmPassword","isTeacher","register","validateUsername","validateEmail","validatePassword","FormCheck","CardWrapper","theme","Header","userApi","testPassed","avgScore","tests","category","score","MenuNavBar","selected","menuButtons","onClick","map","button","index","UserSummary","Form","Group","as","Row","controlId","Label","column","lg","Col","Control","readOnly","defaultValue","PassedTestItem","Text","Footer","PassedTestList","userInfo","UserProfile","setUserInfo","setCategory","ui","sm","testsApi","desc","author","public","time","questions","question","answers","correctAnswer","TestDescription","onStart","TestError","TestQuestion","onNext","total","setSelected","a","Check","label","onChange","e","Number","parseInt","target","checked","AnswerResult","isCorrect","number","QuestionDescription","answer","TestResult","selectedQuestion","setSelectedQuestion","totalAnswers","maxScore","correctAnswers","handleClick","forEach","q","Timer","minutes","onTick","seconds","setSeconds","isActive","setIsActive","interval","setInterval","clearInterval","displayMinutes","Math","floor","displaySeconds","Test","currentQuestion","setQuestion","setAnswers","timeOff","setTimeOff","newAnswers","slice","TestViewer","useParams","setTest","intId","t","PassedTests","assignedTestsApi","assignedBy","date","AssignedTestItem","AssignedTests","setTests","categoriesApi","description","testCount","CardItem","body","footer","Category","categories","setCategories","c","SelectedCategorty","testResult","filter","toLowerCase","Answer","Question","AddTest","setQuestions","Input","newTests","popularTests","news","Home","setNewTests","setPopularTests","setNews","homeApi","ListGroup","n","Item","style","cursor","App","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.10b6521a.chunk.js","sourcesContent":["const storageKey = 'USER_STORAGE_RGR';\r\n\r\nfunction getUser() {\r\n    const user = localStorage.getItem(storageKey);\r\n    if (user) {\r\n        return JSON.parse(user);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction authLogin(user) {\r\n    localStorage.setItem(storageKey, JSON.stringify(user));\r\n}\r\n\r\nfunction authLogout() {\r\n    localStorage.removeItem(storageKey);\r\n}\r\n\r\nexport { getUser, authLogin, authLogout };","import { useContext, useState } from \"react\";\r\nimport * as auth from \"../../services/fakeAuthService\";\r\nimport { authContext } from \"./AuthProvider\";\r\n\r\nfunction useAuthProivder() {\r\n    const [user, setUser] = useState(null);\r\n\r\n    const login = (user) => {\r\n        if (user) {\r\n            auth.authLogin(user);\r\n            setUser(user);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        auth.authLogout();\r\n        setUser(null);\r\n    };\r\n\r\n    if (!user) {\r\n        const storageUser = auth.getUser();\r\n        if (storageUser) {\r\n            login(storageUser);\r\n        }\r\n    }\r\n\r\n    return {\r\n        user,\r\n        login,\r\n        logout\r\n    };\r\n}\r\n\r\nfunction useAuth() {\r\n    return useContext(authContext);\r\n}\r\n\r\nexport { useAuthProivder, useAuth };","import { createContext } from \"react\";\r\nimport { useAuthProivder } from \"./authHooks\";\r\n\r\nexport const authContext = createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n    const auth = useAuthProivder();\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n\r\nexport { AuthProvider };","import { Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../general/authHooks\";\r\n\r\nfunction UserWidget() {\r\n    const auth = useAuth();\r\n    return (\r\n        auth.user &&\r\n        <Nav>\r\n            <NavDropdown title={auth.user?.username} className=\"active\">\r\n                <li><Link to='/user' className=\"dropdown-item\">Профиль</Link></li>\r\n                <NavDropdown.Divider />\r\n                <li><Link to='/logout' className=\"dropdown-item\">Выйти</Link></li>\r\n            </NavDropdown>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport { UserWidget };","import { Container, Nav, Navbar as Navigationbar } from \"react-bootstrap\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../general/authHooks\";\r\nimport { UserWidget } from \"../UserWidget/UserWidget\";\r\nimport './NavBar.scss';\r\n\r\nfunction NavBar() {\r\n    const auth = useAuth();\r\n    return (\r\n        <Navigationbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                <Link className=\"navbar-brand\" to=\"/\">ExTest</Link>\r\n                <Navigationbar.Toggle aria-controls=\"navbar-collapse\" />\r\n                <Navigationbar.Collapse id=\"navbar-collapse\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">Главная</NavLink>\r\n                        { auth.user && <NavLink to=\"/category\" className=\"nav-link\" activeClassName=\"active\">Тесты</NavLink>}\r\n                        { auth.user?.role === 'student' && \r\n                        <>\r\n                        <NavLink to=\"/completed-tests\" className=\"nav-link\" activeClassName=\"active\">Пройденные тесты</NavLink>\r\n                        <NavLink to=\"/assigned-tests\" className=\"nav-link\" activeClassName=\"active\">Назначенные тесты</NavLink>\r\n                        </>\r\n                        }\r\n                        { auth.user?.role === 'teacher' && \r\n                        <>\r\n                        <NavLink to=\"/test/add\" className=\"nav-link\" activeClassName=\"active\">Создать тесты</NavLink>\r\n                        </>\r\n                        }\r\n                    </Nav>\r\n                    <UserWidget />\r\n                </Navigationbar.Collapse>\r\n            </Container>\r\n        </Navigationbar>\r\n    );\r\n}\r\n\r\nexport { NavBar };","import { Redirect, Route } from \"react-router\";\r\nimport { useAuth } from \"../general/authHooks\";\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    const auth = useAuth();\r\n    return (\r\n        <Route {...rest} render={({ location }) =>\r\n            !auth.user\r\n                ? <Redirect to=\"/login\" />\r\n                : children} />\r\n    );\r\n}\r\n\r\nexport { PrivateRoute };","export const users = [\r\n    { username: 'test', password: 'test', email: 'test@test.com', role: 'student' },\r\n    { username: 'admin', password: 'admin', email: 'admin@admin.com', role: 'teacher' },\r\n]\r\n\r\nexport function login(credentials) {\r\n    const user = users.find(u => \r\n        u.username === credentials.username && \r\n        u.password === credentials.password\r\n    );\r\n    return user;\r\n}\r\n\r\nexport function register(credentials){\r\n    const user = {\r\n        username: credentials.username,\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        role: credentials.isTeacher ? 'teacher' : 'student'\r\n    };\r\n    users.push(user);\r\n    return user;\r\n}","class ValidationService {\r\n\r\n    validateUsername(value) {\r\n        let error;\r\n        if (!value) {\r\n            error = 'Это поле обязательно';\r\n        } else if (value.length < 6 || value.length > 20) {\r\n            error = 'Имя пользователя должно быть от 6 до 20 символов';\r\n        }\r\n        return error;\r\n    }\r\n\r\n    validateRequired(value){\r\n        let error;\r\n        if (!value) {\r\n            error = 'Это поле обязательно';\r\n        }\r\n        return error;\r\n    }\r\n\r\n    validatePassword(value) {\r\n        let error;\r\n        if (!value) {\r\n            error = 'Это поле обязательно';\r\n        } else if (value.length < 6 || value.length > 50) {\r\n            error = 'Пароль должен быть от 6 до 50 символов';\r\n        } else if (value.search(/\\d/) === -1) {\r\n            error = 'Пароль должен содержать как минимум одну цифру';\r\n        } else if (value.search(/[a-z]/) === -1) {\r\n            error = 'Пароль должен содержать как минимум одну букву нижнего регистра';\r\n        } else if (value.search(/[A-Z]/) === -1) {\r\n            error = 'Пароль должен содержать как минимум одну букву верхнего регистра';\r\n        } else if (value.search(/[!@#$%^&*]/) === -1) {\r\n            error = 'Пароль должен содержать как минимум один специальный символ';\r\n        }\r\n        return error;\r\n    }\r\n\r\n    validateEmail(value) {\r\n        let error;\r\n        if (!value) {\r\n            error = 'Это поле обязательно';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n            error = 'Неверный email';\r\n        }\r\n        return error;\r\n    }\r\n\r\n}\r\n\r\nexport const validationService = new ValidationService();\r\n\r\n","import { Field, Form, Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { Button, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { login } from '../../api/authApi';\r\nimport { useAuth } from '../../components/general/authHooks';\r\nimport { validationService } from '../../services/validationService';\r\nimport './Login.scss';\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    const [errorMessage, setError] = useState(null);\r\n\r\n    function handleSubmit(values) {\r\n        const user = login(values);\r\n        if (user){\r\n            auth.login(user);\r\n            history.push('/');\r\n        } else{\r\n            setError('Неверный логин или пароль')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <Card className=\"login-card\">\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Вход</Card.Title>\r\n                    <Formik\r\n                        initialValues={{\r\n                            username: '',\r\n                            password: ''\r\n                        }}\r\n                        onSubmit={handleSubmit}>\r\n                        {({ touched, errors }) =>\r\n                        (\r\n                            <Form>\r\n                                {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\r\n                                <FormGroup>\r\n                                    <FormLabel htmlFor=\"username\">Логин:</FormLabel>\r\n                                    <Field\r\n                                        name=\"username\" id=\"username\"\r\n                                        className=\"form-control\" placeholder=\"Введите ваш логин\"\r\n                                        validate={validationService.validateRequired} />\r\n                                    {touched.username && errors.username ? <span className=\"text-danger\">{errors.username}</span> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <FormLabel htmlFor=\"password\">Пароль:</FormLabel>\r\n                                    <Field name=\"password\" id=\"password\"\r\n                                        type=\"password\" className=\"form-control\" placeholder=\"Введите ваш пароль\"\r\n                                        validate={validationService.validateRequiredd} />\r\n                                    {touched.password && errors.password ? <span className=\"text-danger\">{errors.password}</span> : null}\r\n                                </FormGroup>\r\n                                <div className=\"my-2\">Еще нет аккаунта? <Link to=\"/register\">Создайте новый</Link></div>\r\n                                <Button\r\n                                    variant=\"primary\" className=\"btn-block\"\r\n                                    type=\"submit\" disabled={(touched.password && errors.password) || (touched.email && errors.email)}>\r\n                                    Войти\r\n                                    </Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Login };","import { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useAuth } from \"../../components/general/authHooks\";\r\n\r\nfunction Logout() {\r\n    const auth = useAuth();\r\n    \r\n    useEffect(() =>{\r\n        auth.logout();\r\n    }, [auth])\r\n\r\n    return <Redirect to=\"/login\" />\r\n}\r\n\r\nexport { Logout };","import { Field, Form, Formik } from 'formik';\r\nimport { Button, Card, FormCheck, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { register } from '../../api/authApi';\r\nimport { useAuth } from '../../components/general/authHooks';\r\nimport { validationService } from '../../services/validationService';\r\nimport './Register.scss';\r\n\r\nfunction Register() {\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(values) {\r\n        const user = register(values);\r\n        auth.login(user);\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <Card className=\"register-card\">\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Регистрация</Card.Title>\r\n                    <Formik\r\n                        initialValues={{\r\n                            username: '',\r\n                            password: '',\r\n                            email: '',\r\n                            confrirmPassword: '',\r\n                            isTeacher: false\r\n                        }}\r\n                        onSubmit={handleSubmit}>\r\n                        {({ touched, errors, values }) =>\r\n                        (\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <FormLabel htmlFor=\"username\">Логин:</FormLabel>\r\n                                    <Field\r\n                                        name=\"username\" id=\"username\"\r\n                                        className=\"form-control\" placeholder=\"Введите логин\"\r\n                                        validate={validationService.validateUsername} />\r\n                                    {touched.username && errors.username ? <span className=\"text-danger\">{errors.username}</span> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <FormLabel htmlFor=\"email\">Электронная почта:</FormLabel>\r\n                                    <Field\r\n                                        name=\"email\" id=\"email\"\r\n                                        className=\"form-control\" placeholder=\"Введите вашу электронную почту\"\r\n                                        validate={validationService.validateEmail} />\r\n                                    {touched.email && errors.email ? <span className=\"text-danger\">{errors.email}</span> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <FormLabel htmlFor=\"password\">Пароль:</FormLabel>\r\n                                    <Field name=\"password\" id=\"password\"\r\n                                        type=\"password\" className=\"form-control\" placeholder=\"Введите пароль\"\r\n                                        validate={validationService.validatePassword} />\r\n                                    {touched.password && errors.password ? <span className=\"text-danger\">{errors.password}</span> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <FormLabel htmlFor=\"confrirmPassword\">Подтверждение пароля:</FormLabel>\r\n                                    <Field name=\"confrirmPassword\" id=\"confrirmPassword\"\r\n                                        type=\"password\" className=\"form-control\" placeholder=\"Подтвердите пароль пароль\"\r\n                                        validate={validationService.validateRequired} />\r\n                                    {touched.confrirmPassword && errors.confrirmPassword ? <span className=\"text-danger\">{errors.confrirmPassword}</span> : null}\r\n                                    {touched.confrirmPassword && values.confrirmPassword !== values.password ? <div className=\"text-danger\">Пароли не совпадают</div> : null}\r\n                                </FormGroup>\r\n                                <FormCheck>\r\n                                    <Field className=\"form-check-input\" type=\"checkbox\" name=\"isTeacher\"/>\r\n                                    <FormLabel className=\"form-check-label\">Учитель?</FormLabel>\r\n                                </FormCheck>\r\n                                <div className=\"my-2\">Уже есть аккаунт? <Link to=\"/login\">Войти</Link></div>\r\n                                <Button\r\n                                    variant=\"primary\" className=\"btn-block\"\r\n                                    type=\"submit\">\r\n                                    Зарегестрироваться\r\n                                    </Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Register };","import { Card } from \"react-bootstrap\";\r\n\r\nfunction CardWrapper( {theme, title, children} ){\r\n    return (\r\n        <Card>\r\n            <Card.Header className={`bg-${theme} text-center text-${theme !== 'light' && 'white'}`}>{title}</Card.Header>\r\n            <Card.Body>\r\n                {children}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport { CardWrapper };","export const userApi = [\r\n    {\r\n        username: 'test',\r\n        testPassed: 10,\r\n        avgScore: 70,\r\n        tests: [\r\n            {\r\n                id:412,\r\n                title: 'Тест на знание вселенной муравьев',\r\n                category: 'Внеземные существа',\r\n                score: 110\r\n            },\r\n            {\r\n                id:12,\r\n                title: 'Какой ты гоблин',\r\n                category: 'Люди',\r\n                score: 5\r\n            },\r\n            {\r\n                id:437,\r\n                title: 'Программирование для самоваров',\r\n                category: 'Древняя Греция',\r\n                score: 74\r\n            },\r\n            {\r\n                id:112,\r\n                title: 'Тест на IQ',\r\n                category: 'Знания',\r\n                score: 5\r\n            },\r\n            {\r\n                id:985,\r\n                title: 'Зачем ТЫ живешь',\r\n                category: 'Депрессия',\r\n                score: 71\r\n            },\r\n            {\r\n                id:25,\r\n                title: 'Ты - раб?',\r\n                category: 'Современность',\r\n                score: 41\r\n            },\r\n            {\r\n                id:95,\r\n                title: 'Тест на определение твоего гендера',\r\n                category: 'Сказочные создания',\r\n                score: -6\r\n            },\r\n            {\r\n                id:37,\r\n                title: 'Тест на склонность к одобрению',\r\n                category: 'Медицина',\r\n                score: 110\r\n            },\r\n            {\r\n                id:996,\r\n                title: 'Тест на знание вселенной муравьев',\r\n                category: 'Внеземные существа',\r\n                score: 10\r\n            },\r\n            {\r\n                id:666,\r\n                title: 'Полет на Марс через Ад',\r\n                category: 'Космические технологии',\r\n                score: 1\r\n            },\r\n        ]\r\n    }\r\n];","function MenuNavBar({ selected, menuButtons, onClick }) {\r\n    return (\r\n        <>\r\n            {menuButtons.map((button, index) => (\r\n                <button key={index} id={button.id}\r\n                    onClick={() => onClick(button.id)}\r\n                    className={'btn btn-block ' + (selected === button.id ? 'btn-primary' : 'btn-outline-primary')}>\r\n                    {button.name}\r\n                </button>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport { MenuNavBar };","import { Col, Form, Row } from \"react-bootstrap\";\r\n\r\nfunction UserSummary( {user} ) {\r\n    return (\r\n        <Form>\r\n            <Form.Group as={Row} controlId=\"formPlaintextUsername\">\r\n                <Form.Label column lg=\"3\">\r\n                    Имя пользователя:\r\n                    </Form.Label>\r\n                <Col>\r\n                    <Form.Control readOnly defaultValue={user.username} />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                <Form.Label column lg=\"3\">\r\n                    Email:\r\n                    </Form.Label>\r\n                <Col>\r\n                    <Form.Control readOnly defaultValue={user.email} />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                <Form.Label column lg=\"3\">\r\n                    Роль:\r\n                    </Form.Label>\r\n                <Col>\r\n                    <Form.Control readOnly defaultValue={user.role === 'student' ? 'студент' : 'преподаватель'} />\r\n                </Col>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport { UserSummary };","import { Card } from \"react-bootstrap\";\r\nimport './PassedTestItem.scss';\r\n\r\nfunction PassedTestItem({ test, onClick }) {\r\n    return (\r\n        <Card className=\"user-test-item\" onClick={() => onClick(test.id)}>\r\n            <Card.Body>\r\n                <Card.Title>{test.title}</Card.Title>\r\n                <Card.Text>Оценка: {test.score}%</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>Категория: {test.category}</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport { PassedTestItem };","import { Col, Form, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CardWrapper } from \"../general/CardWrapper\";\r\nimport { PassedTestItem } from \"./PassedTestItem\";\r\n\r\nfunction PassedTestList({ user, userInfo }) {\r\n    const history = useHistory();\r\n    return (\r\n        user.role === 'student'\r\n            ? (\r\n                <>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTests\">\r\n                        <Form.Label column lg=\"3\">\r\n                            Пройденно тестов:\r\n                    </Form.Label>\r\n                        <Col>\r\n                            <Form.Control readOnly defaultValue={userInfo.testPassed} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextScore\">\r\n                        <Form.Label column lg=\"3\">\r\n                            Средний бал:\r\n                    </Form.Label>\r\n                        <Col>\r\n                            <Form.Control readOnly defaultValue={userInfo.avgScore + '%'} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <CardWrapper theme=\"light\" title=\"Пройденные тесты:\">\r\n                        { userInfo.tests.map((test, index) => <PassedTestItem test={test} key={index} onClick={(id) => history.push('/tests/' + id)}/>)}\r\n                    </CardWrapper>\r\n                </>\r\n            )\r\n            : (\r\n                <>\r\n                    TODO: add teacher test list menu\r\n                    <h1>Here it's empty...</h1>\r\n                </>\r\n            )\r\n    );\r\n}\r\n\r\nexport { PassedTestList };","import { useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { useAuth } from '../../components/general/authHooks';\r\nimport { CardWrapper } from '../../components/general/CardWrapper';\r\nimport { userApi } from '../../api/userApi';\r\nimport './UserProfile.scss';\r\nimport { MenuNavBar } from '../../components/MenuNavBar/MenuNavBar';\r\nimport { UserSummary } from './UserSummary';\r\nimport { PassedTestList } from '../../components/PassedTestList/PassedTestsList';\r\n\r\nfunction UserProfile() {\r\n    const auth = useAuth();\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [category, setCategory] = useState('general');\r\n\r\n    // get data from the backend\r\n    useEffect(() => {\r\n        const ui = userApi.find(u => u.username === auth.user.username);\r\n        if (ui) {\r\n            setUserInfo(ui);\r\n        }\r\n    }, [auth]);\r\n\r\n    return (\r\n        <CardWrapper theme=\"primary\" title={`Профиль пользователя ${auth.user.username}`}>\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <MenuNavBar selected={category} menuButtons={[{\r\n                        id: 'general',\r\n                        name: 'Общие'\r\n                    },\r\n                    {\r\n                        id: 'tests',\r\n                        name: 'Тесты'\r\n                    }]}\r\n                        onClick={setCategory} />\r\n                </Col>\r\n                <Col>\r\n                    { category === 'general' && <UserSummary user={auth.user}/>}\r\n                    { category === 'tests' && <PassedTestList user={auth.user} userInfo={userInfo} />}\r\n                </Col>\r\n            </Row>\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { UserProfile };","export const testsApi = [\r\n    {\r\n        id: 451,\r\n        name: 'Дифференциальные уравнения',\r\n        desc: 'Тест для студентов 1 курса по математике на тему дифференциальные уравнения',\r\n        author: 'Леонид Вячеславович',\r\n        public: true,\r\n        time: 5,\r\n        category: 'Математика',\r\n        questions: [\r\n            {\r\n                question: 'Общим решением дифференциального уравнения n-го порядка называется',\r\n                answers: [\r\n                    'Решение, в котором произвольным постоянным придаются конкретные числовые значения',\r\n                    'Решение, содержащее n независимых произвольных постоянных',\r\n                    'Решение, выраженное относительно независимой переменной',\r\n                    'Решение, полученное без интегрирования'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Дано уравнение вида y\\'\\'=F(x). Что не относится к цели введения новой функции Z(x)',\r\n                answers: [\r\n                    'z(x)=y\\'',\r\n                    'z\\'(x)=y\\'',\r\n                    'z(x)=y\\'\\'',\r\n                    'z\\'(x)=y'\r\n                ],\r\n                correctAnswer: 2,\r\n                score: 2\r\n            },\r\n            {\r\n                question: 'Решением какого уравнения будет функция, выраженная через значение интеграла от правой части уравнения?',\r\n                answers: [\r\n                    '9x = y',\r\n                    '4x=z',\r\n                    '74-74=0',\r\n                    'xzd=dzx'\r\n                ],\r\n                correctAnswer: 3,\r\n                score: 5\r\n            },\r\n            {\r\n                question: 'Отношение двух однородных функций одинаковых степеней есть однородная функция',\r\n                answers: [\r\n                    'Нулевой степени',\r\n                    'Первой степени',\r\n                    'Второй степени',\r\n                    'Степени на одну ниже степеней исходных функций'\r\n                ],\r\n                correctAnswer: 0,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Какое высказывание не отражает признак уравнения в полных дифференциалах?',\r\n                answers: [\r\n                    'Левая часть уравнения представляет собой сумму частных дифференциалов',\r\n                    'Частная производная по одной переменной одного слагаемого и частная производная по другой переменной другого слагаемого равны',\r\n                    'Общее решение в неявном виде определяется уравнением F(x, y) = C',\r\n                    'Выражение, зависящее от y, входит только в левую часть, а выражение, зависящее от x - только в правую часть'\r\n                ],\r\n                correctAnswer: 2,\r\n                score: 5\r\n            },\r\n            {\r\n                question: 'Решение линейного однородного дифференциального уравнения второго порядка с постоянными коэффициентами содержит тригонометрические функции, если',\r\n                answers: [\r\n                    'Определитель Вронского равен нулю',\r\n                    'Корни характеристического уравнения – комплексные',\r\n                    'Корни характеристического уравнения - действительные и различные',\r\n                    'Корни характеристического уравнения - вещественные и равные'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 3\r\n            },\r\n            {\r\n                question: 'Из тождества, возможного при равенстве коэффициентов при одинаковых степенях x, получают',\r\n                answers: [\r\n                    'Корни характеристического уравнения',\r\n                    'Решение однородного уравнения',\r\n                    'Дифференциальное уравнение более низкого порядка',\r\n                    'Систему уравнений'\r\n                ],\r\n                correctAnswer: 3,\r\n                score: 2\r\n            },\r\n            {\r\n                question: 'При решении линейного дифференциального уравнения первого порядка не применяется',\r\n                answers: [\r\n                    'Замена переменной',\r\n                    'Разделение переменных',\r\n                    'Метод неопределённых коэффициентов',\r\n                    'Интегрирование по частям'\r\n                ],\r\n                correctAnswer: 2,\r\n                score: 2\r\n            },\r\n            {\r\n                question: 'Первым шагом решения уравнения является:',\r\n                answers: [\r\n                    'Почленное деление уравнения на x',\r\n                    'Перенос логарифма в левую часть',\r\n                    'Перенос правой части в левую часть',\r\n                    'Нахождение логарифма'\r\n                ],\r\n                correctAnswer: 0,\r\n                score: 2\r\n            },\r\n            {\r\n                question: 'Частное решение уравнения вида , где правая часть – многочлен первой степени, следует искать в виде',\r\n                answers: [\r\n                    'Решение, в котором произвольным постоянным придаются конкретные числовые значения',\r\n                    'Решение, содержащее n независимых произвольных постоянных',\r\n                    'Решение, выраженное относительно независимой переменной',\r\n                    'Решение, полученное без интегрирования'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 111,\r\n        name: 'Тест на склонность к шизофрении',\r\n        desc: 'Тест на шизофрению, которая является далеко не такой редкой болезнью, какой ее считают, некоторые симптомы и предрасположенности. При данном недуге у человека может размываться граница между реальностью и иллюзией, нарушаться восприятие, эмоциональная сфера, появляться неоправданные страхи, мании. Все это мешает вести полноценную жизнь. Тест на склонность к шизофрении онлайн не может поставить вам диагноз, он в состоянии определить возможность наличия болезни, при наличии которой за точным диагнозом стоит обращаться к высококвалифицированному специалисту. Приступим к тесту на шизофрению? ',\r\n        author: 'Стас Колисниченко',\r\n        public: true,\r\n        time: 1,\r\n        category: 'Психология',\r\n        questions: [\r\n            {\r\n                question: 'Вы избегаете те места, где много людей.',\r\n                answers: [\r\n                    'Всегда',\r\n                    'Часто',\r\n                    'Редко',\r\n                    'Никогда'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вам сложно проявлять любовь или нежность.',\r\n                answers: [\r\n                    'Да',\r\n                    'Скорее да',\r\n                    'Скорее нет',\r\n                    'Нет'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вы одержимы религией, мистикой, эзотерикой и субкультурами.',\r\n                answers: [\r\n                    'Да',\r\n                    'Скорее да',\r\n                    'Скорее нет',\r\n                    'Нет'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вы совершаете действия вопреки своей воли.',\r\n                answers: [\r\n                    'Всегда',\r\n                    'Часто',\r\n                    'Редко',\r\n                    'Никогда'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вы не можете контролировать свои эмоции.',\r\n                answers: [\r\n                    'Да',\r\n                    'Скорее да',\r\n                    'Скорее нет',\r\n                    'Нет'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вас без особых причин раздражают близкие люди.',\r\n                answers: [\r\n                    'Да',\r\n                    'Скорее да',\r\n                    'Скорее нет',\r\n                    'Нет'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Случается, что вы разговариваете с неодушевленными предметами.',\r\n                answers: [\r\n                    'Всегда',\r\n                    'Часто',\r\n                    'Редко',\r\n                    'Никогда'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вы избегаете общения с людьми.',\r\n                answers: [\r\n                    'Всегда',\r\n                    'Часто',\r\n                    'Редко',\r\n                    'Никогда'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n            {\r\n                question: 'Вы равнодушны к родным и близким',\r\n                answers: [\r\n                    'Да',\r\n                    'Скорее да',\r\n                    'Скорее нет',\r\n                    'Нет'\r\n                ],\r\n                correctAnswer: 1,\r\n                score: 4\r\n            },\r\n        ]\r\n    }\r\n];","import { Button } from \"react-bootstrap\";\r\n\r\nfunction TestDescription({ test, onStart }){\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center\">Тест - {test.name}</h2>\r\n            <div className=\"m-2 text-center\">{test.desc}</div>\r\n            <div>Автор: {test.author}</div>\r\n            <div>Вопросов: {test.questions.length}</div>\r\n            <Button variant=\"success\" onClick={onStart} className=\"m-2 btn-block\">Начать тест</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { TestDescription };","function TestError() {\r\n    return (\r\n        <>\r\n            <h4 className=\"bg-warning m-1 p-1 text-center text-white\">Ошибка</h4>\r\n            <p>Произошла неизвестная ошибка. Соединение сервером не удалось установать. Пожалуйста выберите другой тест</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { TestError };","import { useState } from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\n\r\nfunction TestQuestion({ id, question, onNext, total }) {\r\n    const [selected, setSelected] = useState(-1);    \r\n    function onClick(){\r\n        onNext(selected);\r\n        setSelected(-1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center\">#{id}/{total ?? '??'}</h2>\r\n            <h4>{question.question}</h4>\r\n            <Card>\r\n                <Card.Body>\r\n                    {question.answers.map((a, index) => (\r\n                        <Form.Check key={index} label={a} \r\n                        name=\"answerGroup\" value={index} type=\"radio\" \r\n                        onChange={(e) => setSelected(Number.parseInt(e.target.value))}\r\n                        checked={index === selected} />\r\n                    ))}\r\n                </Card.Body>\r\n            </Card>\r\n            <Button variant=\"primary\" className=\"btn-block mt-2\" onClick={onClick} disabled={selected === -1}>Следующий вопрос</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { TestQuestion };","import './AnswerResult.scss';\r\n\r\nfunction AnswerResult({ isCorrect, number, onClick }) {\r\n    return (\r\n        <div className={\"shadow answer \" + (isCorrect ? \"correct\" : \"wrong\")}\r\n        onClick={() => onClick(number)}>\r\n            {number}\r\n        </div>\r\n        );\r\n}\r\n\r\nexport { AnswerResult };","import { Card } from \"react-bootstrap\";\r\n\r\nfunction QuestionDescription({ question, answer }) {\r\n    if (!question) {\r\n        return null;\r\n    }\r\n\r\n    const isCorrect = question.correctAnswer === answer;\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className={`bg-${isCorrect ? 'success' : 'danger'} m-1 p-1 text-white text-center`}>\r\n                    {isCorrect ? 'Вы ответили правильно' : 'Вы ответили неправильно'}\r\n                </h4>\r\n                <p><strong>Вопрос: </strong>{question.question}</p>\r\n                <p><strong>Ответ: </strong>{question.answers[question.correctAnswer]}</p>\r\n                <p><strong>Ваш ответ: </strong>{question.answers[answer]}</p>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport { QuestionDescription };","import { useState } from \"react\";\r\nimport { AnswerResult } from \"./AnswerResult\";\r\nimport { QuestionDescription } from \"./QuestionDescription\";\r\n\r\nfunction TestResult({ test, answers }) {\r\n    const [selectedQuestion, setSelectedQuestion] = useState(-1);\r\n    const totalAnswers = test.questions.length;\r\n\r\n    let maxScore = 0;\r\n    let score = 0;\r\n    let correctAnswers = 0;\r\n    test.questions.forEach((q, index) => {\r\n        if (q.correctAnswer === answers[index]) {\r\n            correctAnswers++;\r\n            score += q.score;\r\n        }\r\n        maxScore += q.score;\r\n    });\r\n\r\n    function handleClick(id) {\r\n        --id;\r\n        if (id === selectedQuestion) {\r\n            setSelectedQuestion(-1);\r\n        }\r\n        else {\r\n            setSelectedQuestion(id);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"text-center\">Вы прошли тест \"{test.name}\"</h3>\r\n            <h4 className=\"text-center\">Ваш результат {score}/{maxScore}</h4>\r\n            <p>{test.desc}</p>\r\n            <p>Автор: {test.author}</p>\r\n            <h4>Вы ответели на {correctAnswers}/{totalAnswers} вопросов правильно</h4>\r\n            <div className=\"row justify-content-center p-2\">\r\n                {test.questions?.map((q, index) => {\r\n                    const isCorrect = q.correctAnswer === answers[index];\r\n                    return <AnswerResult key={index} isCorrect={isCorrect} number={index + 1} onClick={handleClick}/>\r\n                })}\r\n            </div>\r\n            <QuestionDescription\r\n                question={selectedQuestion >= 0 ? test.questions[selectedQuestion] : null}\r\n                answer={selectedQuestion >= 0? answers[selectedQuestion] : 0} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport { TestResult };","import { useEffect, useState } from \"react\";\r\n\r\nfunction Timer({ minutes, onTick }) {\r\n    const [seconds, setSeconds] = useState(minutes * 60);\r\n    const [isActive, setIsActive] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (isActive) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => {\r\n                    if (seconds === 0 && isActive) {\r\n                        setIsActive(false);\r\n                        return 0;\r\n                    }\r\n                    return seconds - 1;\r\n                })\r\n            }, 1000);\r\n        } else if (!isActive) {\r\n            clearInterval(interval);     \r\n            onTick(); \r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive, onTick]);\r\n\r\n    let displayMinutes = Math.floor(seconds / 60);\r\n    if (displayMinutes < 10) {\r\n        displayMinutes = '0' + displayMinutes;\r\n    }\r\n    let displaySeconds = seconds % 60;\r\n    if (displaySeconds < 10) {\r\n        displaySeconds = '0' + displaySeconds;\r\n    }\r\n\r\n    return <span className={seconds < 60 ? 'text-danger' : null}>{displayMinutes}:{displaySeconds}</span>\r\n}\r\n\r\nexport { Timer };","import { useState } from \"react\";\r\nimport { TestDescription } from \"../TestDescription/TestDescription\";\r\nimport { TestError } from \"../TestError/TestError\";\r\nimport { TestQuestion } from \"../TestQuestion/TestQuestion\";\r\nimport { TestResult } from \"../TestResult/TestResult\";\r\nimport { Timer } from \"../Timer/Timer\";\r\n\r\nfunction Test({ test }) {\r\n    const [currentQuestion, setQuestion] = useState(-1);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [timeOff, setTimeOff] = useState(false);\r\n\r\n    function onNext(answer) {\r\n        const newAnswers = answers.slice();\r\n        newAnswers.push(answer);\r\n\r\n        setAnswers(newAnswers);\r\n        setQuestion(currentQuestion + 1);\r\n    }\r\n\r\n    if (!test) {\r\n        return <TestError />\r\n    }\r\n    else if (test && currentQuestion === -1) {\r\n        return <TestDescription test={test} onStart={() => setQuestion(currentQuestion + 1)} />\r\n    }\r\n    else if (timeOff || currentQuestion >= test.questions.length){\r\n        return <TestResult answers={answers} test={test}/>\r\n    } \r\n    else {\r\n        return (\r\n            <>\r\n                <h4 className=\"text-right text-large\">Время: <Timer minutes={test.time} onTick={() => setTimeOff(true)} /></h4>\r\n                <TestQuestion question={test.questions[currentQuestion]}\r\n                    id={currentQuestion + 1} onNext={onNext}\r\n                    total={test.questions.length} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Test };","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { testsApi } from '../../api/testApi';\r\nimport { CardWrapper } from '../../components/general/CardWrapper';\r\nimport { Test } from '../../components/Test/Test';\r\nimport './TestViewer.scss';\r\n\r\nfunction TestViewer() {\r\n    const { id } = useParams();\r\n    const [test, setTest] = useState(null); \r\n\r\n    useEffect(() => {\r\n        // get test from back (fake)\r\n        const intId = Number.parseInt(id);\r\n        if (intId){\r\n            setTest(testsApi.find(t => t.id === intId));\r\n        }\r\n    }, [id]);\r\n    \r\n    return (\r\n        <CardWrapper theme=\"secondary\" title=\"Прохождение теста\">\r\n            <Test test={test}/>\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { TestViewer };","import { useEffect, useState } from \"react\";\r\nimport { userApi } from \"../../api/userApi\";\r\nimport { useAuth } from \"../../components/general/authHooks\";\r\nimport { CardWrapper } from \"../../components/general/CardWrapper\";\r\nimport { PassedTestList } from \"../../components/PassedTestList/PassedTestsList\";\r\n\r\nfunction PassedTests() {\r\n    const auth = useAuth();\r\n    const [userInfo, setUserInfo] = useState(null);\r\n\r\n    // get data from the backend\r\n    useEffect(() => {\r\n        const ui = userApi.find(u => u.username === auth.user.username);\r\n        if (ui) {\r\n            setUserInfo(ui);\r\n        }\r\n    }, [auth]);\r\n\r\n    return (\r\n        <CardWrapper theme=\"success\" title=\"Пройденные тесты\">\r\n            {userInfo && <PassedTestList user={auth.user} userInfo={userInfo} />}\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { PassedTests };","export const assignedTestsApi = [\r\n    {\r\n        username: 'test',\r\n        tests: [\r\n            {\r\n                id: 111,\r\n                name: 'Тест на склонность к шизофрении',\r\n                category: 'Психология',\r\n                assignedBy: 'Стас Колисниченко',\r\n                date: '2021-06-07',\r\n            },\r\n            {\r\n                id: 132,\r\n                name: 'Тест про бактерии',\r\n                category: 'Биология',\r\n                assignedBy: 'Учитель биологии',\r\n                date: '2021-07-17',\r\n            },\r\n            {\r\n                id: 125,\r\n                name: 'Итоговый тест по географии',\r\n                category: 'География',\r\n                assignedBy: 'Учитель географии',\r\n                date: '2021-06-11',\r\n            },\r\n            {\r\n                id: 1117,\r\n                name: 'Проверьте свои знания мифов Древней Греции',\r\n                category: 'История',\r\n                assignedBy: 'Учитель истории',\r\n                date: '2021-06-15',\r\n            },\r\n        ]\r\n    }\r\n];","import { Card } from \"react-bootstrap\";\r\nimport './AssignedTestItem.scss';\r\n\r\nfunction AssignedTestItem({ test, onClick }) {\r\n    return (\r\n        <Card onClick={() => onClick(test.id)} className=\"assigned-test-item\">\r\n            <Card.Header>{test.name}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>Назначенно: {test.assignedBy}</Card.Text>\r\n                <Card.Text>Дата: {test.date}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>Категория: {test.category}</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport { AssignedTestItem };","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { assignedTestsApi } from \"../../api/assignedTestsApi\";\r\nimport { useAuth } from \"../../components/general/authHooks\";\r\nimport { CardWrapper } from \"../../components/general/CardWrapper\";\r\nimport { AssignedTestItem } from \"./AssignedTestItem\";\r\n\r\nfunction AssignedTests() {\r\n    const { user } = useAuth();\r\n    const [tests, setTests] = useState([]);\r\n    const history = useHistory();\r\n\r\n    // get data from the backend\r\n    useEffect(() => {\r\n        const tests = assignedTestsApi.find(a => a.username === user.username);\r\n        if (tests){\r\n            setTests(tests.tests);\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <CardWrapper theme=\"warning\" title=\"Назначенные тесты\">\r\n            {tests && tests.map((t) => (\r\n                <AssignedTestItem test={t} onClick={(id) => history.push('/tests/' + id)}/>\r\n            ))}\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { AssignedTests };","export const categoriesApi = [\r\n    {\r\n        name: 'Математика',\r\n        description: 'Матема́тика — точная (формальная) наука, первоначально исследовавшая количественные отношения и пространственные формы; более современное понимание: это наука об отношениях между объектами, о которых ничего не известно, кроме описывающих их некоторых свойств, — именно тех, которые в качестве аксиом положены в основание той или иной математической теории.',\r\n        testCount: 15,\r\n        id: 11,\r\n    },\r\n    {\r\n        name: 'Психология',\r\n        description: 'Психоло́гия — научная дисциплина, изучающая закономерности возникновения, развития и функционирования психики и психической деятельности человека и групп людей. Психология объединяет в себе гуманитарный и естественно-научный подходы.',\r\n        testCount: 7,\r\n        id: 1,\r\n    },\r\n    {\r\n        name: 'Биология',\r\n        description: 'Биоло́гия — наука о живых существах и их взаимодействии со средой обитания. Изучает все аспекты жизни, в частности: структуру, функционирование, рост, происхождение, эволюцию и распределение живых организмов на Земле. Классифицирует и описывает живые существа, происхождение их видов, взаимодействие между собой и с окружающей средой.',\r\n        testCount: 5,\r\n        id: 71,\r\n    },\r\n    {\r\n        name: 'Плоский мир',\r\n        description: 'Плоский мир (англ. Discworld) — вселенная, описанная в серии романов Терри Пратчетта «Плоский мир», а в более узком смысле — планета в форме диска, расположенного на спинах четырёх слонов, несомых плывущей в космосе гигантской черепахой А’Туином. Имена слонов — Берилия (англ. Berilia), Тубул (англ. Tubul), Великий Т’Фон (англ. Great T’Phon) и Джеракин (англ. Jerakeen). Гигантская черепаха относится к виду космических черепах (англ. Chelys Galaktica).',\r\n        testCount: 75,\r\n        id: 14,\r\n    },\r\n]","import { Card } from 'react-bootstrap';\r\nimport './CardItem.scss';\r\n\r\nfunction CardItem({title, body, footer, onClick}){\r\n    return (\r\n        <Card className=\"card-item\" onClick={onClick}>\r\n            <Card.Header>{title}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {body}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>{footer}</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport { CardItem };","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { categoriesApi } from \"../../api/categoriesApi\";\r\nimport { CardItem } from \"../../components/general/CardItem\";\r\nimport { CardWrapper } from \"../../components/general/CardWrapper\";\r\n\r\nfunction Category() {\r\n    const [categories, setCategories] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setCategories(categoriesApi);\r\n    }, []);\r\n\r\n    return (\r\n        <CardWrapper theme=\"primary\" title=\"Категории\">\r\n            {categories && categories.map(c => (\r\n                <CardItem\r\n                    key={c.id} title={c.name} body={c.description} footer={\"Тестов: \" + c.testCount}\r\n                    onClick={() => history.push('/category/' + c.id)} />\r\n            ))}\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { Category };","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { categoriesApi } from \"../../api/categoriesApi\";\r\nimport { testsApi } from \"../../api/testApi\";\r\nimport { CardItem } from \"../../components/general/CardItem\";\r\nimport { CardWrapper } from \"../../components/general/CardWrapper\";\r\n\r\nfunction SelectedCategorty() {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [tests, setTests] = useState([]);\r\n    const [category, setCategory] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const intId = Number.parseInt(id);\r\n        if (intId) {\r\n            const category = categoriesApi.find(c => c.id === intId)\r\n\r\n            if (category) {\r\n                setCategory(category);\r\n                const testResult = testsApi.filter(t => t.category.toLowerCase() === category.name.toLowerCase());\r\n                if (testResult) {\r\n                    setTests(testResult);\r\n                }\r\n            }\r\n        }\r\n    }, [id]);\r\n\r\n    if (!category){\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    return (\r\n        <CardWrapper title={category.name} theme=\"primary\">\r\n            {tests && tests.map(t => (\r\n                <CardItem \r\n                title={t.name} body={t.desc}\r\n                footer={\"Автор: \" + t.author}\r\n                onClick={() => history.push('/tests/' + t.id)}/>\r\n            ))}\r\n            {tests.length === 0 && <h1>Тут тестов пока нет</h1>}\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { SelectedCategorty };","import { Col, Form, Row } from \"react-bootstrap\";\r\n\r\nfunction Answer({ id }) {\r\n    return (\r\n        <Form.Group as={Row} controlId=\"formPlaintextUsername\">\r\n            <Form.Label column lg=\"2\">\r\n                Ответ №{id + 1}:\r\n            </Form.Label>\r\n            <Col>\r\n                <Form.Control placeholder=\"Введите ответ\" />\r\n            </Col>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport { Answer };","import { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { CardWrapper } from \"../../components/general/CardWrapper\";\r\nimport { Answer } from \"./Answer\";\r\n\r\nfunction Question( { id } ) {\r\n    const [answers, setAnswers] = useState([]);\r\n\r\n    function handleAddAnswer(){\r\n        const a = answers.slice();\r\n        a.push(<Answer id={a.length} key={a.length}/>);\r\n        setAnswers(a);\r\n    }\r\n    \r\n    return (\r\n        <CardWrapper theme=\"light\" title={`Вопрос №${id + 1}`}>\r\n            <Form.Group>\r\n                <Form.Label>Вопрос:</Form.Label>\r\n                <Form.Control placeholder=\"Введите вопрос\"/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Правильный ответ</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue={-1}>\r\n                    <option value=\"-1\" disabled>Выберите правильный ответ</option>\r\n                    {answers.map((a, index) => <option key={index} value={index}>{index}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <div className=\"mt-2\">\r\n                {answers}\r\n            </div>\r\n            <Button variant=\"outline-primary\" onClick={handleAddAnswer}>Добавить ответ</Button>\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { Question };","import { useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { categoriesApi } from '../../api/categoriesApi';\r\nimport { CardWrapper } from '../../components/general/CardWrapper';\r\nimport './AddTest.scss';\r\nimport { Question } from './Question';\r\n\r\nfunction AddTest() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [categories, setCategories] = useState([]); \r\n\r\n    useEffect(() => {\r\n        setCategories(categoriesApi);\r\n    }, null);\r\n\r\n    function handleAddQuestion() {\r\n        const q = questions.slice();\r\n        q.push(<Question id={q.length} key={q.length}/>);\r\n        setQuestions(q);\r\n    }\r\n\r\n    return (\r\n        <CardWrapper theme=\"success\" title=\"Новый тест\">\r\n            <Form.Group>\r\n                <Form.Label>Название:</Form.Label>\r\n                <Form.Control placeholder=\"Введите название теста\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Категория:</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue={-1}>\r\n                    <option value={-1} disabled>Выберите категорию</option>\r\n                    {categories.map((c) => <option value={c.id} key={c.id}>{c.name}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Check className=\"my-2\">\r\n                <Form.Check.Input />\r\n                <Form.Check.Label>Приватный?</Form.Check.Label>\r\n            </Form.Check>\r\n            <CardWrapper theme=\"light\" title=\"Вопросы\">\r\n                {questions}\r\n                <Button variant=\"primary\" className=\"mt-2\" onClick={handleAddQuestion}>Добавить вопрос</Button>\r\n            </CardWrapper>\r\n            <Button variant=\"success\" className=\"my-2\">Создать</Button>\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\nexport { AddTest };","export const newTests = [ \"Новый тест №1\", \"Новый тест №2\", \"Новый тест №3\" ];\r\nexport const popularTests = [ \"Популярный тест №1\", \"Популярный тест №2\", \"Популярный тест №3\" ];\r\nexport const news = [\r\n    {\r\n        title: 'Новость №1',\r\n        desc: 'Описание новости №1'\r\n    },\r\n    {\r\n        title: 'Новость №2',\r\n        desc: 'Описание новости №2'\r\n    },\r\n    {\r\n        title: 'Новость №3',\r\n        desc: 'Описание новости №3'\r\n    },\r\n    {\r\n        title: 'Новость №4',\r\n        desc: 'Описание новости №4'\r\n    },\r\n]","import { useEffect, useState } from \"react\";\r\nimport { Card, Col, Container, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport * as homeApi from '../../api/homeApi';\r\n\r\nfunction Home() {\r\n    const [newTests, setNewTests] = useState([]);\r\n    const [popularTests, setPopularTests] = useState([]);\r\n    const [news, setNews] = useState([]);\r\n    const history = useHistory();\r\n\r\n\r\n    function handleClick(id){\r\n        history.push(\"/tests/\" + id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNewTests(homeApi.newTests);\r\n        setPopularTests(homeApi.popularTests);\r\n        setNews(homeApi.news);\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"p-2\">\r\n            <h2 className=\"text-center bg-light rounded shadow-sm p-2\">Система онлайн тестирования</h2>\r\n            <Row>\r\n                <Col sm={3}>\r\n                    <ListGroup>\r\n                        {newTests.map((n, index) => (\r\n                            <ListGroup.Item key={index} style={{cursor: \"pointer\"}} onClick={() => handleClick(index)}>{n}</ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {news.map((n, id) => (\r\n                                <div key={id} className=\"my-2 border p-2 rounded news\" style={{cursor: \"pointer\"}}>\r\n                                    <h5>{n.title}</h5>\r\n                                    <p>{n.desc}</p>\r\n                                </div>\r\n                            ))}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={3}>\r\n                <ListGroup>\r\n                        {popularTests.map((n, index) => (\r\n                            <ListGroup.Item key={index} style={{cursor: \"pointer\"}} onClick={() => handleClick(index)}>{n}</ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport { Home };","import { Container } from 'react-bootstrap';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { AuthProvider } from './components/general/AuthProvider';\r\nimport { NavBar } from './components/NavBar/NavBar';\r\nimport { PrivateRoute } from './components/general/PrivateRoute';\r\nimport { Login } from './pages/Login/Login';\r\nimport { Logout } from './pages/Logout/Logout';\r\nimport { Register } from './pages/Register/Register';\r\nimport { UserProfile } from './pages/UserProfile/UserProfile';\r\nimport { TestViewer } from './pages/TestViewer/TestViewer';\r\nimport { PassedTests } from './pages/PassedTests/PassedTests';\r\nimport { AssignedTests } from './pages/AssignedTests/AssignedTests';\r\nimport { Category } from './pages/Category/Category';\r\nimport { SelectedCategorty } from './pages/Category/SelectedCategory';\r\nimport { AddTest } from './pages/AddTest/AddTest';\r\nimport { Home } from './pages/Home/Home';\r\n\r\nfunction App() {\r\n    return (\r\n        <AuthProvider>\r\n            <HashRouter>\r\n                <NavBar />\r\n                <Container>\r\n                    <Switch>\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Route exact path=\"/register\" component={Register} />\r\n                        <PrivateRoute exact path=\"/\">\r\n                            <Home />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/logout\">\r\n                            <Logout />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/completed-tests\">\r\n                            <PassedTests />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/user\">\r\n                            <UserProfile />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/tests/:id\">\r\n                            <TestViewer />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/assigned-tests\">\r\n                            <AssignedTests />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/category\">\r\n                            <Category />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/category/:id\">\r\n                            <SelectedCategorty />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute exact path=\"/test/add\">\r\n                            <AddTest />\r\n                        </PrivateRoute>\r\n                        <Route>\r\n                            <h1 className=\"bg-warning p-2 m-2 text-white text-center\">Not found</h1>\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </HashRouter>\r\n        </AuthProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}